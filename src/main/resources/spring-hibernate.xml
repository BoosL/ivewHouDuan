<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd">


	<!-- JNDI(通过Tomcat)方式配置数据源 -->
	<!-- <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean"> 
		<property name="jndiName" value="${jndiName}"></property> </bean> -->


	<!-- 引入属性文件 -->
	<context:property-placeholder ignore-unresolvable="true" location="classpath:config.properties" />


	<!-- 配置数据源 这里class可以使用不同的驱动 -->
	<!-- <bean name="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> -->
	<bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="url" value="${jdbc_url}" />
		<property name="username" value="${jdbc_username}" />
		<property name="password" value="${jdbc_password}" />

		<!-- 初始化连接大小 -->
		<property name="initialSize" value="0" />
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="20" />
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="0" />
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="60000" />
	</bean>


	<!-- 配置hibernate session工厂 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="current_session_context_class">thread</prop>
				<!-- <prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</prop> -->
				<prop key="hibernate.connection.driver_class">${driverClassName}</prop>
			</props>
		</property>
		<!-- 自动扫描注解方式配置的hibernate类文件 -->
		<!-- 这一段涉及到 实体的注解 @Entity @Table(name="xxx") 的使用。增加@Entity 注解 后 具有 实体的特性。 -->
		<property name="packagesToScan">
			<list>
				<!-- 此处与entity实体路径对应 -->
				<value>com.bolaa.manage.entity</value>
			</list>
		</property>
	</bean>



	<!-- 配置事务管理器 -->
	<bean name="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<!-- 拦截器方式配置事物 -->
	<!--dao层class不需要注解@Transactional。 -->
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- <tx:method name="add*" propagation="REQUIRED" /> <tx:method name="save*" 
				propagation="REQUIRED" /> <tx:method name="update*" propagation="REQUIRED" 
				/> <tx:method name="modify*" propagation="REQUIRED" /> <tx:method name="edit*" 
				propagation="REQUIRED" /> <tx:method name="delete*" propagation="REQUIRED" 
				/> <tx:method name="remove*" propagation="REQUIRED" /> <tx:method name="repair" 
				propagation="REQUIRED" /> <tx:method name="deleteAndRepair" propagation="REQUIRED" 
				/> <tx:method name="get*" propagation="REQUIRED" /> <tx:method name="find*" 
				propagation="REQUIRED" /> <tx:method name="load*" propagation="REQUIRED" 
				/> <tx:method name="search*" propagation="REQUIRED" /> <tx:method name="datagrid*" 
				propagation="REQUIRED" /> <tx:method name="*" propagation="REQUIRED" /> -->
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="append*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="modify*" propagation="REQUIRED" />
			<tx:method name="edit*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="repair" propagation="REQUIRED" />

			<tx:method name="get*" propagation="REQUIRED" read-only="true" />
			<tx:method name="find*" propagation="REQUIRED" read-only="true" />
			<tx:method name="load*" propagation="REQUIRED" read-only="true" />
			<tx:method name="search*" propagation="REQUIRED" read-only="true" />
			<tx:method name="query*" propagation="REQUIRED" read-only="true" />
			<tx:method name="datagrid*" propagation="REQUIRED"
				read-only="true" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="transactionPointcut"
			expression="execution(* com.bolaa.manage.dao..*Impl.*(..))" />
		<aop:advisor pointcut-ref="transactionPointcut"
			advice-ref="transactionAdvice" />
	</aop:config>

	<!-- 注解方式配置事物 -->
	<!--这句涉及到事物的注解 @Transactional 的使用。增加@Transactional注解 后 具有 事物的特性。 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />

</beans>
